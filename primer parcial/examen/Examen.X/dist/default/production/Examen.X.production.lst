

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 11 23:47:49 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   007CD2                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _display_array
    57   007CD2  003F               	dw	63
    58   007CD4  0006               	dw	6
    59   007CD6  005B               	dw	91
    60   007CD8  004F               	dw	79
    61   007CDA  0066               	dw	102
    62   007CDC  006D               	dw	109
    63   007CDE  007D               	dw	125
    64   007CE0  0007               	dw	7
    65   007CE2  007F               	dw	127
    66   007CE4  0067               	dw	103
    67   007CE6  0077               	dw	119
    68   007CE8  007C               	dw	124
    69   007CEA  0039               	dw	57
    70   007CEC  005E               	dw	94
    71   007CEE  0079               	dw	121
    72   007CF0  0071               	dw	113
    73                           
    74                           ;initializer for _scP3
    75   007CF2  FFFF               	dw	65535
    76                           
    77                           ;initializer for _scP2
    78   007CF4  FFFF               	dw	65535
    79                           
    80                           ;initializer for _scP1
    81   007CF6  FFFF               	dw	65535
    82   000000                     _LATCbits	set	3979
    83   000000                     _LATBbits	set	3978
    84   000000                     _TRISCbits	set	3988
    85   000000                     _TRISBbits	set	3987
    86                           
    87                           	psect	nvCOMRAM
    88   000027                     __pnvCOMRAM:
    89                           	callstack 0
    90   000027                     _i:
    91                           	callstack 0
    92   000027                     	ds	2
    93   000000                     _PORTAbits	set	3968
    94   000000                     _LATD	set	3980
    95   000000                     _TRISAbits	set	3986
    96   000000                     _TRISD	set	3989
    97   000000                     _ADCON1	set	4033
    98   000000                     _LATAbits	set	3977
    99   000000                     _PORTCbits	set	3970
   100   000000                     _PORTBbits	set	3969
   101                           
   102                           ; #config settings
   103                           
   104                           	psect	cinit
   105   007CAC                     __pcinit:
   106                           	callstack 0
   107   007CAC                     start_initialization:
   108                           	callstack 0
   109   007CAC                     __initialization:
   110                           	callstack 0
   111                           
   112                           ; Initialize objects allocated to COMRAM (38 bytes)
   113                           ; load TBLPTR registers with __pidataCOMRAM
   114   007CAC  0ED2               	movlw	low __pidataCOMRAM
   115   007CAE  6EF6               	movwf	tblptrl,c
   116   007CB0  0E7C               	movlw	high __pidataCOMRAM
   117   007CB2  6EF7               	movwf	tblptrh,c
   118   007CB4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   119   007CB6  6EF8               	movwf	tblptru,c
   120   007CB8  EE00  F001         	lfsr	0,__pdataCOMRAM
   121   007CBC  EE10 F026          	lfsr	1,38
   122   007CC0                     copy_data0:
   123   007CC0  0009               	tblrd		*+
   124   007CC2  CFF5 FFEE          	movff	tablat,postinc0
   125   007CC6  50E5               	movf	postdec1,w,c
   126   007CC8  50E1               	movf	fsr1l,w,c
   127   007CCA  E1FA               	bnz	copy_data0
   128   007CCC                     end_of_initialization:
   129                           	callstack 0
   130   007CCC                     __end_of__initialization:
   131                           	callstack 0
   132   007CCC  0100               	movlb	0
   133   007CCE  EF7C  F03E         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	dataCOMRAM
   136   000001                     __pdataCOMRAM:
   137                           	callstack 0
   138   000001                     _display_array:
   139                           	callstack 0
   140   000001                     	ds	32
   141   000021                     _scP3:
   142                           	callstack 0
   143   000021                     	ds	2
   144   000023                     _scP2:
   145                           	callstack 0
   146   000023                     	ds	2
   147   000025                     _scP1:
   148                           	callstack 0
   149   000025                     	ds	2
   150                           
   151                           	psect	cstackCOMRAM
   152   000029                     __pcstackCOMRAM:
   153                           	callstack 0
   154   000029                     ??_main:
   155                           
   156                           ; 1 bytes @ 0x0
   157   000029                     	ds	2
   158                           
   159 ;;
   160 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   161 ;;
   162 ;; *************** function _main *****************
   163 ;; Defined at:
   164 ;;		line 25 in file "main.c"
   165 ;; Parameters:    Size  Location     Type
   166 ;;		None
   167 ;; Auto vars:     Size  Location     Type
   168 ;;		None
   169 ;; Return value:  Size  Location     Type
   170 ;;                  1    wreg      void 
   171 ;; Registers used:
   172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   173 ;; Tracked objects:
   174 ;;		On entry : 0/0
   175 ;;		On exit  : 0/0
   176 ;;		Unchanged: 0/0
   177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   178 ;;      Params:         0       0       0       0       0       0       0       0       0
   179 ;;      Locals:         0       0       0       0       0       0       0       0       0
   180 ;;      Temps:          2       0       0       0       0       0       0       0       0
   181 ;;      Totals:         2       0       0       0       0       0       0       0       0
   182 ;;Total ram usage:        2 bytes
   183 ;; This function calls:
   184 ;;		Nothing
   185 ;; This function is called by:
   186 ;;		Startup code after reset
   187 ;; This function uses a non-reentrant model
   188 ;;
   189                           
   190                           	psect	text0
   191   007CF8                     __ptext0:
   192                           	callstack 0
   193   007CF8                     _main:
   194                           	callstack 31
   195   007CF8                     
   196                           ;main.c: 26:     ADCON1 = 0B00001111;;main.c: 26:     ADCON1 = 0B00001111;
   197   007CF8  0E0F               	movlw	15
   198   007CFA  6EC1               	movwf	193,c	;volatile
   199                           
   200                           ;main.c: 27:     TRISD = 0;;main.c: 27:     TRISD = 0;
   201   007CFC  0E00               	movlw	0
   202   007CFE  6E95               	movwf	149,c	;volatile
   203   007D00                     
   204                           ;main.c: 28:     TRISAbits.RA0 = 1;;main.c: 28:     TRISAbits.RA0 = 1;
   205   007D00  8092               	bsf	146,0,c	;volatile
   206   007D02                     
   207                           ;main.c: 29:     TRISBbits.RB0 = 1;;main.c: 29:     TRISBbits.RB0 = 1;
   208   007D02  8093               	bsf	147,0,c	;volatile
   209   007D04                     
   210                           ;main.c: 30:     TRISCbits.RC0 = 1;;main.c: 30:     TRISCbits.RC0 = 1;
   211   007D04  8094               	bsf	148,0,c	;volatile
   212   007D06                     
   213                           ;main.c: 31:     TRISAbits.RA4 = 0;;main.c: 31:     TRISAbits.RA4 = 0;
   214   007D06  9892               	bcf	146,4,c	;volatile
   215   007D08                     
   216                           ;main.c: 32:     TRISBbits.RB4 = 0;;main.c: 32:     TRISBbits.RB4 = 0;
   217   007D08  9893               	bcf	147,4,c	;volatile
   218   007D0A                     
   219                           ;main.c: 33:     TRISCbits.RC6 = 0;;main.c: 33:     TRISCbits.RC6 = 0;
   220   007D0A  9C94               	bcf	148,6,c	;volatile
   221   007D0C                     l41:
   222                           
   223                           ;main.c: 35:         i = 0;;main.c: 35:         i = 0;
   224   007D0C  0E00               	movlw	0
   225   007D0E  6E28               	movwf	(_i+1)^0,c
   226   007D10  0E00               	movlw	0
   227   007D12  6E27               	movwf	_i^0,c
   228   007D14                     
   229                           ;main.c: 36:         scP1=-1;;main.c: 36:         scP1=-1;
   230   007D14  6825               	setf	_scP1^0,c
   231   007D16  6826               	setf	(_scP1+1)^0,c
   232   007D18                     
   233                           ;main.c: 37:         scP2=-1;;main.c: 37:         scP2=-1;
   234   007D18  6823               	setf	_scP2^0,c
   235   007D1A  6824               	setf	(_scP2+1)^0,c
   236   007D1C                     
   237                           ;main.c: 38:         scP3=-1;;main.c: 38:         scP3=-1;
   238   007D1C  6821               	setf	_scP3^0,c
   239   007D1E  6822               	setf	(_scP3+1)^0,c
   240                           
   241                           ;main.c: 39:         while(scP1==-1){;main.c: 39:         while(scP1==-1){
   242   007D20  EFD9  F03E         	goto	l783
   243   007D24                     l767:
   244                           
   245                           ;main.c: 40:             if(i>15){;main.c: 40:             if(i>15){
   246   007D24  BE28               	btfsc	(_i+1)^0,7,c
   247   007D26  EF9E  F03E         	goto	u11
   248   007D2A  5028               	movf	(_i+1)^0,w,c
   249   007D2C  E109               	bnz	u10
   250   007D2E  0E10               	movlw	16
   251   007D30  5C27               	subwf	_i^0,w,c
   252   007D32  A0D8               	btfss	status,0,c
   253   007D34  EF9E  F03E         	goto	u11
   254   007D38  EFA0  F03E         	goto	u10
   255   007D3C                     u11:
   256   007D3C  EFA4  F03E         	goto	l771
   257   007D40                     u10:
   258   007D40                     
   259                           ;main.c: 41:                 i=0;;main.c: 41:                 i=0;
   260   007D40  0E00               	movlw	0
   261   007D42  6E28               	movwf	(_i+1)^0,c
   262   007D44  0E00               	movlw	0
   263   007D46  6E27               	movwf	_i^0,c
   264   007D48                     l771:
   265                           
   266                           ;main.c: 43:             LATD = display_array[i];;main.c: 43:             LATD = display
      +                          _array[i];
   267   007D48  90D8               	bcf	status,0,c
   268   007D4A  3427               	rlcf	_i^0,w,c
   269   007D4C  6ED9               	movwf	fsr2l,c
   270   007D4E  3428               	rlcf	(_i+1)^0,w,c
   271   007D50  6EDA               	movwf	fsr2h,c
   272   007D52  0E01               	movlw	low _display_array
   273   007D54  26D9               	addwf	fsr2l,f,c
   274   007D56  0E00               	movlw	high _display_array
   275   007D58  22DA               	addwfc	fsr2h,f,c
   276   007D5A  50DF               	movf	indf2,w,c
   277   007D5C  6E8C               	movwf	140,c	;volatile
   278   007D5E                     
   279                           ;main.c: 44:             _delay((unsigned long)((100)*(20000000/4000.0)));;main.c: 44:  
      +                                     _delay((unsigned long)((100)*(20000000/4000.0)));
   280   007D5E  0E03               	movlw	3
   281   007D60  6E2A               	movwf	(??_main+1)^0,c
   282   007D62  0E8A               	movlw	138
   283   007D64  6E29               	movwf	??_main^0,c
   284   007D66  0E56               	movlw	86
   285   007D68                     u197:
   286   007D68  2EE8               	decfsz	wreg,f,c
   287   007D6A  D7FE               	bra	u197
   288   007D6C  2E29               	decfsz	??_main^0,f,c
   289   007D6E  D7FC               	bra	u197
   290   007D70  2E2A               	decfsz	(??_main+1)^0,f,c
   291   007D72  D7FA               	bra	u197
   292   007D74                     
   293                           ;main.c: 45:             if(PORTAbits.RA0== 1 ){;main.c: 45:             if(PORTAbits.RA
      +                          0== 1 ){
   294   007D74  A080               	btfss	128,0,c	;volatile
   295   007D76  EFBF  F03E         	goto	u21
   296   007D7A  EFC1  F03E         	goto	u20
   297   007D7E                     u21:
   298   007D7E  EFD7  F03E         	goto	l781
   299   007D82                     u20:
   300   007D82                     
   301                           ;main.c: 46:                 scP1 = i;;main.c: 46:                 scP1 = i;
   302   007D82  C027  F025         	movff	_i,_scP1
   303   007D86  C028  F026         	movff	_i+1,_scP1+1
   304   007D8A                     
   305                           ;main.c: 47:                 _delay((unsigned long)((5000)*(20000000/4000.0)));;main.c: 
      +                          47:                 _delay((unsigned long)((5000)*(20000000/4000.0)));
   306   007D8A  0E7F               	movlw	127
   307   007D8C  6E2A               	movwf	(??_main+1)^0,c
   308   007D8E  0ED4               	movlw	212
   309   007D90  6E29               	movwf	??_main^0,c
   310   007D92  0E32               	movlw	50
   311   007D94                     u207:
   312   007D94  2EE8               	decfsz	wreg,f,c
   313   007D96  D7FE               	bra	u207
   314   007D98  2E29               	decfsz	??_main^0,f,c
   315   007D9A  D7FC               	bra	u207
   316   007D9C  2E2A               	decfsz	(??_main+1)^0,f,c
   317   007D9E  D7FA               	bra	u207
   318   007DA0                     l46:
   319   007DA0  B080               	btfsc	128,0,c	;volatile
   320   007DA2  EFD5  F03E         	goto	u31
   321   007DA6  EFD7  F03E         	goto	u30
   322   007DAA                     u31:
   323   007DAA  EFD0  F03E         	goto	l46
   324   007DAE                     u30:
   325   007DAE                     l781:
   326                           
   327                           ;main.c: 50:             i+=1;;main.c: 50:             i+=1;
   328   007DAE  4A27               	infsnz	_i^0,f,c
   329   007DB0  2A28               	incf	(_i+1)^0,f,c
   330   007DB2                     l783:
   331                           
   332                           ;main.c: 39:         while(scP1==-1){;main.c: 39:         while(scP1==-1){
   333   007DB2  2825               	incf	_scP1^0,w,c
   334   007DB4  E108               	bnz	u40
   335   007DB6  2826               	incf	(_scP1+1)^0,w,c
   336   007DB8  B4D8               	btfsc	status,2,c
   337   007DBA  EFE1  F03E         	goto	u41
   338   007DBE  EFE3  F03E         	goto	u40
   339   007DC2                     u41:
   340   007DC2  EF92  F03E         	goto	l767
   341   007DC6                     u40:
   342   007DC6                     
   343                           ;main.c: 52:         i = 0;;main.c: 52:         i = 0;
   344   007DC6  0E00               	movlw	0
   345   007DC8  6E28               	movwf	(_i+1)^0,c
   346   007DCA  0E00               	movlw	0
   347   007DCC  6E27               	movwf	_i^0,c
   348                           
   349                           ;main.c: 53:         while(scP2==-1){;main.c: 53:         while(scP2==-1){
   350   007DCE  EF30  F03F         	goto	l803
   351   007DD2                     l787:
   352                           
   353                           ;main.c: 54:             if(i>15){;main.c: 54:             if(i>15){
   354   007DD2  BE28               	btfsc	(_i+1)^0,7,c
   355   007DD4  EFF5  F03E         	goto	u51
   356   007DD8  5028               	movf	(_i+1)^0,w,c
   357   007DDA  E109               	bnz	u50
   358   007DDC  0E10               	movlw	16
   359   007DDE  5C27               	subwf	_i^0,w,c
   360   007DE0  A0D8               	btfss	status,0,c
   361   007DE2  EFF5  F03E         	goto	u51
   362   007DE6  EFF7  F03E         	goto	u50
   363   007DEA                     u51:
   364   007DEA  EFFB  F03E         	goto	l791
   365   007DEE                     u50:
   366   007DEE                     
   367                           ;main.c: 55:                 i=0;;main.c: 55:                 i=0;
   368   007DEE  0E00               	movlw	0
   369   007DF0  6E28               	movwf	(_i+1)^0,c
   370   007DF2  0E00               	movlw	0
   371   007DF4  6E27               	movwf	_i^0,c
   372   007DF6                     l791:
   373                           
   374                           ;main.c: 57:             LATD = display_array[i];;main.c: 57:             LATD = display
      +                          _array[i];
   375   007DF6  90D8               	bcf	status,0,c
   376   007DF8  3427               	rlcf	_i^0,w,c
   377   007DFA  6ED9               	movwf	fsr2l,c
   378   007DFC  3428               	rlcf	(_i+1)^0,w,c
   379   007DFE  6EDA               	movwf	fsr2h,c
   380   007E00  0E01               	movlw	low _display_array
   381   007E02  26D9               	addwf	fsr2l,f,c
   382   007E04  0E00               	movlw	high _display_array
   383   007E06  22DA               	addwfc	fsr2h,f,c
   384   007E08  50DF               	movf	indf2,w,c
   385   007E0A  6E8C               	movwf	140,c	;volatile
   386   007E0C                     
   387                           ;main.c: 58:             _delay((unsigned long)((100)*(20000000/4000.0)));;main.c: 58:  
      +                                     _delay((unsigned long)((100)*(20000000/4000.0)));
   388   007E0C  0E03               	movlw	3
   389   007E0E  6E2A               	movwf	(??_main+1)^0,c
   390   007E10  0E8A               	movlw	138
   391   007E12  6E29               	movwf	??_main^0,c
   392   007E14  0E56               	movlw	86
   393   007E16                     u217:
   394   007E16  2EE8               	decfsz	wreg,f,c
   395   007E18  D7FE               	bra	u217
   396   007E1A  2E29               	decfsz	??_main^0,f,c
   397   007E1C  D7FC               	bra	u217
   398   007E1E  2E2A               	decfsz	(??_main+1)^0,f,c
   399   007E20  D7FA               	bra	u217
   400   007E22                     
   401                           ;main.c: 59:             if(PORTBbits.RB0== 1 ){;main.c: 59:             if(PORTBbits.RB
      +                          0== 1 ){
   402   007E22  A081               	btfss	129,0,c	;volatile
   403   007E24  EF16  F03F         	goto	u61
   404   007E28  EF18  F03F         	goto	u60
   405   007E2C                     u61:
   406   007E2C  EF2E  F03F         	goto	l801
   407   007E30                     u60:
   408   007E30                     
   409                           ;main.c: 60:                 scP2 = i;;main.c: 60:                 scP2 = i;
   410   007E30  C027  F023         	movff	_i,_scP2
   411   007E34  C028  F024         	movff	_i+1,_scP2+1
   412   007E38                     
   413                           ;main.c: 61:                 _delay((unsigned long)((5000)*(20000000/4000.0)));;main.c: 
      +                          61:                 _delay((unsigned long)((5000)*(20000000/4000.0)));
   414   007E38  0E7F               	movlw	127
   415   007E3A  6E2A               	movwf	(??_main+1)^0,c
   416   007E3C  0ED4               	movlw	212
   417   007E3E  6E29               	movwf	??_main^0,c
   418   007E40  0E32               	movlw	50
   419   007E42                     u227:
   420   007E42  2EE8               	decfsz	wreg,f,c
   421   007E44  D7FE               	bra	u227
   422   007E46  2E29               	decfsz	??_main^0,f,c
   423   007E48  D7FC               	bra	u227
   424   007E4A  2E2A               	decfsz	(??_main+1)^0,f,c
   425   007E4C  D7FA               	bra	u227
   426   007E4E                     l54:
   427   007E4E  B081               	btfsc	129,0,c	;volatile
   428   007E50  EF2C  F03F         	goto	u71
   429   007E54  EF2E  F03F         	goto	u70
   430   007E58                     u71:
   431   007E58  EF27  F03F         	goto	l54
   432   007E5C                     u70:
   433   007E5C                     l801:
   434                           
   435                           ;main.c: 64:             i+=1;;main.c: 64:             i+=1;
   436   007E5C  4A27               	infsnz	_i^0,f,c
   437   007E5E  2A28               	incf	(_i+1)^0,f,c
   438   007E60                     l803:
   439                           
   440                           ;main.c: 53:         while(scP2==-1){;main.c: 53:         while(scP2==-1){
   441   007E60  2823               	incf	_scP2^0,w,c
   442   007E62  E108               	bnz	u80
   443   007E64  2824               	incf	(_scP2+1)^0,w,c
   444   007E66  B4D8               	btfsc	status,2,c
   445   007E68  EF38  F03F         	goto	u81
   446   007E6C  EF3A  F03F         	goto	u80
   447   007E70                     u81:
   448   007E70  EFE9  F03E         	goto	l787
   449   007E74                     u80:
   450   007E74                     
   451                           ;main.c: 66:         i = 0;;main.c: 66:         i = 0;
   452   007E74  0E00               	movlw	0
   453   007E76  6E28               	movwf	(_i+1)^0,c
   454   007E78  0E00               	movlw	0
   455   007E7A  6E27               	movwf	_i^0,c
   456                           
   457                           ;main.c: 67:         while(scP3==-1){;main.c: 67:         while(scP3==-1){
   458   007E7C  EF87  F03F         	goto	l823
   459   007E80                     l807:
   460                           
   461                           ;main.c: 68:             if(i>15){;main.c: 68:             if(i>15){
   462   007E80  BE28               	btfsc	(_i+1)^0,7,c
   463   007E82  EF4C  F03F         	goto	u91
   464   007E86  5028               	movf	(_i+1)^0,w,c
   465   007E88  E109               	bnz	u90
   466   007E8A  0E10               	movlw	16
   467   007E8C  5C27               	subwf	_i^0,w,c
   468   007E8E  A0D8               	btfss	status,0,c
   469   007E90  EF4C  F03F         	goto	u91
   470   007E94  EF4E  F03F         	goto	u90
   471   007E98                     u91:
   472   007E98  EF52  F03F         	goto	l811
   473   007E9C                     u90:
   474   007E9C                     
   475                           ;main.c: 69:                 i=0;;main.c: 69:                 i=0;
   476   007E9C  0E00               	movlw	0
   477   007E9E  6E28               	movwf	(_i+1)^0,c
   478   007EA0  0E00               	movlw	0
   479   007EA2  6E27               	movwf	_i^0,c
   480   007EA4                     l811:
   481                           
   482                           ;main.c: 71:             LATD = display_array[i];;main.c: 71:             LATD = display
      +                          _array[i];
   483   007EA4  90D8               	bcf	status,0,c
   484   007EA6  3427               	rlcf	_i^0,w,c
   485   007EA8  6ED9               	movwf	fsr2l,c
   486   007EAA  3428               	rlcf	(_i+1)^0,w,c
   487   007EAC  6EDA               	movwf	fsr2h,c
   488   007EAE  0E01               	movlw	low _display_array
   489   007EB0  26D9               	addwf	fsr2l,f,c
   490   007EB2  0E00               	movlw	high _display_array
   491   007EB4  22DA               	addwfc	fsr2h,f,c
   492   007EB6  50DF               	movf	indf2,w,c
   493   007EB8  6E8C               	movwf	140,c	;volatile
   494   007EBA                     
   495                           ;main.c: 72:             _delay((unsigned long)((100)*(20000000/4000.0)));;main.c: 72:  
      +                                     _delay((unsigned long)((100)*(20000000/4000.0)));
   496   007EBA  0E03               	movlw	3
   497   007EBC  6E2A               	movwf	(??_main+1)^0,c
   498   007EBE  0E8A               	movlw	138
   499   007EC0  6E29               	movwf	??_main^0,c
   500   007EC2  0E56               	movlw	86
   501   007EC4                     u237:
   502   007EC4  2EE8               	decfsz	wreg,f,c
   503   007EC6  D7FE               	bra	u237
   504   007EC8  2E29               	decfsz	??_main^0,f,c
   505   007ECA  D7FC               	bra	u237
   506   007ECC  2E2A               	decfsz	(??_main+1)^0,f,c
   507   007ECE  D7FA               	bra	u237
   508   007ED0                     
   509                           ;main.c: 73:             if(PORTCbits.RC0== 1 ){;main.c: 73:             if(PORTCbits.RC
      +                          0== 1 ){
   510   007ED0  A082               	btfss	130,0,c	;volatile
   511   007ED2  EF6D  F03F         	goto	u101
   512   007ED6  EF6F  F03F         	goto	u100
   513   007EDA                     u101:
   514   007EDA  EF85  F03F         	goto	l821
   515   007EDE                     u100:
   516   007EDE                     
   517                           ;main.c: 74:                 scP3 = i;;main.c: 74:                 scP3 = i;
   518   007EDE  C027  F021         	movff	_i,_scP3
   519   007EE2  C028  F022         	movff	_i+1,_scP3+1
   520   007EE6                     
   521                           ;main.c: 75:                 _delay((unsigned long)((5000)*(20000000/4000.0)));;main.c: 
      +                          75:                 _delay((unsigned long)((5000)*(20000000/4000.0)));
   522   007EE6  0E7F               	movlw	127
   523   007EE8  6E2A               	movwf	(??_main+1)^0,c
   524   007EEA  0ED4               	movlw	212
   525   007EEC  6E29               	movwf	??_main^0,c
   526   007EEE  0E32               	movlw	50
   527   007EF0                     u247:
   528   007EF0  2EE8               	decfsz	wreg,f,c
   529   007EF2  D7FE               	bra	u247
   530   007EF4  2E29               	decfsz	??_main^0,f,c
   531   007EF6  D7FC               	bra	u247
   532   007EF8  2E2A               	decfsz	(??_main+1)^0,f,c
   533   007EFA  D7FA               	bra	u247
   534   007EFC                     l62:
   535   007EFC  B082               	btfsc	130,0,c	;volatile
   536   007EFE  EF83  F03F         	goto	u111
   537   007F02  EF85  F03F         	goto	u110
   538   007F06                     u111:
   539   007F06  EF7E  F03F         	goto	l62
   540   007F0A                     u110:
   541   007F0A                     l821:
   542                           
   543                           ;main.c: 78:             i+=1;;main.c: 78:             i+=1;
   544   007F0A  4A27               	infsnz	_i^0,f,c
   545   007F0C  2A28               	incf	(_i+1)^0,f,c
   546   007F0E                     l823:
   547                           
   548                           ;main.c: 67:         while(scP3==-1){;main.c: 67:         while(scP3==-1){
   549   007F0E  2821               	incf	_scP3^0,w,c
   550   007F10  E108               	bnz	u120
   551   007F12  2822               	incf	(_scP3+1)^0,w,c
   552   007F14  B4D8               	btfsc	status,2,c
   553   007F16  EF8F  F03F         	goto	u121
   554   007F1A  EF91  F03F         	goto	u120
   555   007F1E                     u121:
   556   007F1E  EF40  F03F         	goto	l807
   557   007F22                     u120:
   558   007F22                     
   559                           ;main.c: 80:         if(scP1>=scP2 && scP1>=scP3){;main.c: 80:         if(scP1>=scP2 && 
      +                          scP1>=scP3){
   560   007F22  5023               	movf	_scP2^0,w,c
   561   007F24  5C25               	subwf	_scP1^0,w,c
   562   007F26  5026               	movf	(_scP1+1)^0,w,c
   563   007F28  0A80               	xorlw	128
   564   007F2A  6E29               	movwf	??_main^0,c
   565   007F2C  5024               	movf	(_scP2+1)^0,w,c
   566   007F2E  0A80               	xorlw	128
   567   007F30  5829               	subwfb	??_main^0,w,c
   568   007F32  A0D8               	btfss	status,0,c
   569   007F34  EF9E  F03F         	goto	u131
   570   007F38  EFA0  F03F         	goto	u130
   571   007F3C                     u131:
   572   007F3C  EFB0  F03F         	goto	l831
   573   007F40                     u130:
   574   007F40  5021               	movf	_scP3^0,w,c
   575   007F42  5C25               	subwf	_scP1^0,w,c
   576   007F44  5026               	movf	(_scP1+1)^0,w,c
   577   007F46  0A80               	xorlw	128
   578   007F48  6E29               	movwf	??_main^0,c
   579   007F4A  5022               	movf	(_scP3+1)^0,w,c
   580   007F4C  0A80               	xorlw	128
   581   007F4E  5829               	subwfb	??_main^0,w,c
   582   007F50  A0D8               	btfss	status,0,c
   583   007F52  EFAD  F03F         	goto	u141
   584   007F56  EFAF  F03F         	goto	u140
   585   007F5A                     u141:
   586   007F5A  EFB0  F03F         	goto	l831
   587   007F5E                     u140:
   588   007F5E                     
   589                           ;main.c: 81:             LATAbits.LA4=1;;main.c: 81:             LATAbits.LA4=1;
   590   007F5E  8889               	bsf	137,4,c	;volatile
   591   007F60                     l831:
   592                           
   593                           ;main.c: 83:         if(scP2>=scP1 && scP2>=scP3){;main.c: 83:         if(scP2>=scP1 && 
      +                          scP2>=scP3){
   594   007F60  5025               	movf	_scP1^0,w,c
   595   007F62  5C23               	subwf	_scP2^0,w,c
   596   007F64  5024               	movf	(_scP2+1)^0,w,c
   597   007F66  0A80               	xorlw	128
   598   007F68  6E29               	movwf	??_main^0,c
   599   007F6A  5026               	movf	(_scP1+1)^0,w,c
   600   007F6C  0A80               	xorlw	128
   601   007F6E  5829               	subwfb	??_main^0,w,c
   602   007F70  A0D8               	btfss	status,0,c
   603   007F72  EFBD  F03F         	goto	u151
   604   007F76  EFBF  F03F         	goto	u150
   605   007F7A                     u151:
   606   007F7A  EFCF  F03F         	goto	l837
   607   007F7E                     u150:
   608   007F7E  5021               	movf	_scP3^0,w,c
   609   007F80  5C23               	subwf	_scP2^0,w,c
   610   007F82  5024               	movf	(_scP2+1)^0,w,c
   611   007F84  0A80               	xorlw	128
   612   007F86  6E29               	movwf	??_main^0,c
   613   007F88  5022               	movf	(_scP3+1)^0,w,c
   614   007F8A  0A80               	xorlw	128
   615   007F8C  5829               	subwfb	??_main^0,w,c
   616   007F8E  A0D8               	btfss	status,0,c
   617   007F90  EFCC  F03F         	goto	u161
   618   007F94  EFCE  F03F         	goto	u160
   619   007F98                     u161:
   620   007F98  EFCF  F03F         	goto	l837
   621   007F9C                     u160:
   622   007F9C                     
   623                           ;main.c: 84:             LATBbits.LB4=1;;main.c: 84:             LATBbits.LB4=1;
   624   007F9C  888A               	bsf	138,4,c	;volatile
   625   007F9E                     l837:
   626                           
   627                           ;main.c: 86:         if(scP3>=scP2 && scP3>=scP1){;main.c: 86:         if(scP3>=scP2 && 
      +                          scP3>=scP1){
   628   007F9E  5023               	movf	_scP2^0,w,c
   629   007FA0  5C21               	subwf	_scP3^0,w,c
   630   007FA2  5022               	movf	(_scP3+1)^0,w,c
   631   007FA4  0A80               	xorlw	128
   632   007FA6  6E29               	movwf	??_main^0,c
   633   007FA8  5024               	movf	(_scP2+1)^0,w,c
   634   007FAA  0A80               	xorlw	128
   635   007FAC  5829               	subwfb	??_main^0,w,c
   636   007FAE  A0D8               	btfss	status,0,c
   637   007FB0  EFDC  F03F         	goto	u171
   638   007FB4  EFDE  F03F         	goto	u170
   639   007FB8                     u171:
   640   007FB8  EFEE  F03F         	goto	l843
   641   007FBC                     u170:
   642   007FBC  5025               	movf	_scP1^0,w,c
   643   007FBE  5C21               	subwf	_scP3^0,w,c
   644   007FC0  5022               	movf	(_scP3+1)^0,w,c
   645   007FC2  0A80               	xorlw	128
   646   007FC4  6E29               	movwf	??_main^0,c
   647   007FC6  5026               	movf	(_scP1+1)^0,w,c
   648   007FC8  0A80               	xorlw	128
   649   007FCA  5829               	subwfb	??_main^0,w,c
   650   007FCC  A0D8               	btfss	status,0,c
   651   007FCE  EFEB  F03F         	goto	u181
   652   007FD2  EFED  F03F         	goto	u180
   653   007FD6                     u181:
   654   007FD6  EFEE  F03F         	goto	l843
   655   007FDA                     u180:
   656   007FDA                     
   657                           ;main.c: 87:             LATCbits.LC6=1;;main.c: 87:             LATCbits.LC6=1;
   658   007FDA  8C8B               	bsf	139,6,c	;volatile
   659   007FDC                     l843:
   660                           
   661                           ;main.c: 89:         _delay((unsigned long)((10000)*(20000000/4000.0)));;main.c: 89:    
      +                               _delay((unsigned long)((10000)*(20000000/4000.0)));
   662   007FDC  0EFE               	movlw	254
   663   007FDE  6E2A               	movwf	(??_main+1)^0,c
   664   007FE0  0EA7               	movlw	167
   665   007FE2  6E29               	movwf	??_main^0,c
   666   007FE4  0E66               	movlw	102
   667   007FE6                     u257:
   668   007FE6  2EE8               	decfsz	wreg,f,c
   669   007FE8  D7FE               	bra	u257
   670   007FEA  2E29               	decfsz	??_main^0,f,c
   671   007FEC  D7FC               	bra	u257
   672   007FEE  2E2A               	decfsz	(??_main+1)^0,f,c
   673   007FF0  D7FA               	bra	u257
   674   007FF2                     
   675                           ;main.c: 90:         LATAbits.LA4=0;;main.c: 90:         LATAbits.LA4=0;
   676   007FF2  9889               	bcf	137,4,c	;volatile
   677   007FF4                     
   678                           ;main.c: 91:         LATBbits.LB4=0;;main.c: 91:         LATBbits.LB4=0;
   679   007FF4  988A               	bcf	138,4,c	;volatile
   680   007FF6                     
   681                           ;main.c: 92:         LATCbits.LC6=0;;main.c: 92:         LATCbits.LC6=0;
   682   007FF6  9C8B               	bcf	139,6,c	;volatile
   683   007FF8  EF86  F03E         	goto	l41
   684   007FFC  EF00  F000         	goto	start
   685   008000                     __end_of_main:
   686                           	callstack 0
   687   000000                     
   688                           	psect	rparam
   689   000000                     
   690                           	psect	idloc
   691                           
   692                           ;Config register IDLOC0 @ 0x200000
   693                           ;	unspecified, using default values
   694   200000                     	org	2097152
   695   200000  FF                 	db	255
   696                           
   697                           ;Config register IDLOC1 @ 0x200001
   698                           ;	unspecified, using default values
   699   200001                     	org	2097153
   700   200001  FF                 	db	255
   701                           
   702                           ;Config register IDLOC2 @ 0x200002
   703                           ;	unspecified, using default values
   704   200002                     	org	2097154
   705   200002  FF                 	db	255
   706                           
   707                           ;Config register IDLOC3 @ 0x200003
   708                           ;	unspecified, using default values
   709   200003                     	org	2097155
   710   200003  FF                 	db	255
   711                           
   712                           ;Config register IDLOC4 @ 0x200004
   713                           ;	unspecified, using default values
   714   200004                     	org	2097156
   715   200004  FF                 	db	255
   716                           
   717                           ;Config register IDLOC5 @ 0x200005
   718                           ;	unspecified, using default values
   719   200005                     	org	2097157
   720   200005  FF                 	db	255
   721                           
   722                           ;Config register IDLOC6 @ 0x200006
   723                           ;	unspecified, using default values
   724   200006                     	org	2097158
   725   200006  FF                 	db	255
   726                           
   727                           ;Config register IDLOC7 @ 0x200007
   728                           ;	unspecified, using default values
   729   200007                     	org	2097159
   730   200007  FF                 	db	255
   731                           
   732                           	psect	config
   733                           
   734                           ;Config register CONFIG1L @ 0x300000
   735                           ;	PLL Prescaler Selection bits
   736                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   737                           ;	System Clock Postscaler Selection bits
   738                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   739                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   740                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   741   300000                     	org	3145728
   742   300000  00                 	db	0
   743                           
   744                           ;Config register CONFIG1H @ 0x300001
   745                           ;	Oscillator Selection bits
   746                           ;	FOSC = HS, HS oscillator (HS)
   747                           ;	Fail-Safe Clock Monitor Enable bit
   748                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   749                           ;	Internal/External Oscillator Switchover bit
   750                           ;	IESO = OFF, Oscillator Switchover mode disabled
   751   300001                     	org	3145729
   752   300001  0C                 	db	12
   753                           
   754                           ;Config register CONFIG2L @ 0x300002
   755                           ;	Power-up Timer Enable bit
   756                           ;	PWRT = OFF, PWRT disabled
   757                           ;	Brown-out Reset Enable bits
   758                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   759                           ;	Brown-out Reset Voltage bits
   760                           ;	BORV = 3, Minimum setting 2.05V
   761                           ;	USB Voltage Regulator Enable bit
   762                           ;	VREGEN = OFF, USB voltage regulator disabled
   763   300002                     	org	3145730
   764   300002  1F                 	db	31
   765                           
   766                           ;Config register CONFIG2H @ 0x300003
   767                           ;	Watchdog Timer Enable bit
   768                           ;	WDT = ON, WDT enabled
   769                           ;	Watchdog Timer Postscale Select bits
   770                           ;	WDTPS = 32768, 1:32768
   771   300003                     	org	3145731
   772   300003  1F                 	db	31
   773                           
   774                           ; Padding undefined space
   775   300004                     	org	3145732
   776   300004  FF                 	db	255
   777                           
   778                           ;Config register CONFIG3H @ 0x300005
   779                           ;	CCP2 MUX bit
   780                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   781                           ;	PORTB A/D Enable bit
   782                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   783                           ;	Low-Power Timer 1 Oscillator Enable bit
   784                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   785                           ;	MCLR Pin Enable bit
   786                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   787   300005                     	org	3145733
   788   300005  83                 	db	131
   789                           
   790                           ;Config register CONFIG4L @ 0x300006
   791                           ;	Stack Full/Underflow Reset Enable bit
   792                           ;	STVREN = ON, Stack full/underflow will cause Reset
   793                           ;	Single-Supply ICSP Enable bit
   794                           ;	LVP = ON, Single-Supply ICSP enabled
   795                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   796                           ;	ICPRT = OFF, ICPORT disabled
   797                           ;	Extended Instruction Set Enable bit
   798                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   799                           ;	Background Debugger Enable bit
   800                           ;	DEBUG = 0x1, unprogrammed default
   801   300006                     	org	3145734
   802   300006  85                 	db	133
   803                           
   804                           ; Padding undefined space
   805   300007                     	org	3145735
   806   300007  FF                 	db	255
   807                           
   808                           ;Config register CONFIG5L @ 0x300008
   809                           ;	Code Protection bit
   810                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   811                           ;	Code Protection bit
   812                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   813                           ;	Code Protection bit
   814                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   815                           ;	Code Protection bit
   816                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   817   300008                     	org	3145736
   818   300008  0F                 	db	15
   819                           
   820                           ;Config register CONFIG5H @ 0x300009
   821                           ;	Boot Block Code Protection bit
   822                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   823                           ;	Data EEPROM Code Protection bit
   824                           ;	CPD = OFF, Data EEPROM is not code-protected
   825   300009                     	org	3145737
   826   300009  C0                 	db	192
   827                           
   828                           ;Config register CONFIG6L @ 0x30000A
   829                           ;	Write Protection bit
   830                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   831                           ;	Write Protection bit
   832                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   833                           ;	Write Protection bit
   834                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   835                           ;	Write Protection bit
   836                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   837   30000A                     	org	3145738
   838   30000A  0F                 	db	15
   839                           
   840                           ;Config register CONFIG6H @ 0x30000B
   841                           ;	Configuration Register Write Protection bit
   842                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   843                           ;	Boot Block Write Protection bit
   844                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   845                           ;	Data EEPROM Write Protection bit
   846                           ;	WRTD = OFF, Data EEPROM is not write-protected
   847   30000B                     	org	3145739
   848   30000B  E0                 	db	224
   849                           
   850                           ;Config register CONFIG7L @ 0x30000C
   851                           ;	Table Read Protection bit
   852                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   853                           ;	Table Read Protection bit
   854                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   855                           ;	Table Read Protection bit
   856                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   857                           ;	Table Read Protection bit
   858                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   859   30000C                     	org	3145740
   860   30000C  0F                 	db	15
   861                           
   862                           ;Config register CONFIG7H @ 0x30000D
   863                           ;	Boot Block Table Read Protection bit
   864                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   865   30000D                     	org	3145741
   866   30000D  40                 	db	64
   867                           tosu	equ	0xFFF
   868                           tosh	equ	0xFFE
   869                           tosl	equ	0xFFD
   870                           stkptr	equ	0xFFC
   871                           pclatu	equ	0xFFB
   872                           pclath	equ	0xFFA
   873                           pcl	equ	0xFF9
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           prodh	equ	0xFF4
   879                           prodl	equ	0xFF3
   880                           indf0	equ	0xFEF
   881                           postinc0	equ	0xFEE
   882                           postdec0	equ	0xFED
   883                           preinc0	equ	0xFEC
   884                           plusw0	equ	0xFEB
   885                           fsr0h	equ	0xFEA
   886                           fsr0l	equ	0xFE9
   887                           wreg	equ	0xFE8
   888                           indf1	equ	0xFE7
   889                           postinc1	equ	0xFE6
   890                           postdec1	equ	0xFE5
   891                           preinc1	equ	0xFE4
   892                           plusw1	equ	0xFE3
   893                           fsr1h	equ	0xFE2
   894                           fsr1l	equ	0xFE1
   895                           bsr	equ	0xFE0
   896                           indf2	equ	0xFDF
   897                           postinc2	equ	0xFDE
   898                           postdec2	equ	0xFDD
   899                           preinc2	equ	0xFDC
   900                           plusw2	equ	0xFDB
   901                           fsr2h	equ	0xFDA
   902                           fsr2l	equ	0xFD9
   903                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        38
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      42
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2      2A       1       44.2%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlh         2B      0       0      22        0.0%
BITBIGSFRlllll      20      0       0      25        0.0%
BITBIGSFRllllhl      6      0       0      24        0.0%
BITBIGSFRlllh        5      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A       3        0.0%
DATA                 0      0      2A       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 11 23:47:49 2024

                      _i 0027                       l41 7D0C                       l62 7EFC  
                     l54 7E4E                       l46 7DA0                       u10 7D40  
                     u11 7D3C                       u20 7D82                       u21 7D7E  
                     u30 7DAE                       u31 7DAA                       u40 7DC6  
                     u41 7DC2                       u50 7DEE                       u51 7DEA  
                     u60 7E30                       u61 7E2C                       u70 7E5C  
                     u71 7E58                       u80 7E74                       u81 7E70  
                     u90 7E9C                       u91 7E98                      l801 7E5C  
                    l811 7EA4                      l803 7E60                      l821 7F0A  
                    l813 7EBA                      l805 7E74                      l831 7F60  
                    l815 7ED0                      l807 7E80                      l823 7F0E  
                    l751 7D02                      l841 7FDA                      l833 7F7E  
                    l825 7F22                      l817 7EDE                      l809 7E9C  
                    l761 7D14                      l753 7D04                      l843 7FDC  
                    l835 7F9C                      l827 7F40                      l819 7EE6  
                    l771 7D48                      l763 7D18                      l755 7D06  
                    l747 7CF8                      l845 7FF2                      l837 7F9E  
                    l829 7F5E                      l781 7DAE                      l773 7D5E  
                    l765 7D1C                      l757 7D08                      l749 7D00  
                    l847 7FF4                      l839 7FBC                      l791 7DF6  
                    l775 7D74                      l767 7D24                      l783 7DB2  
                    l759 7D0A                      l849 7FF6                      l793 7E0C  
                    l785 7DC6                      l777 7D82                      l769 7D40  
                    l795 7E22                      l787 7DD2                      l779 7D8A  
                    l797 7E30                      l789 7DEE                      l799 7E38  
                    u100 7EDE                      u101 7EDA                      u110 7F0A  
                    u111 7F06                      u120 7F22                      u121 7F1E  
                    u130 7F40                      u131 7F3C                      u140 7F5E  
                    u141 7F5A                      u150 7F7E                      u151 7F7A  
                    u207 7D94                      u160 7F9C                      u161 7F98  
                    u217 7E16                      u170 7FBC                      u171 7FB8  
                    u227 7E42                      u180 7FDA                      u181 7FD6  
                    u237 7EC4                      u247 7EF0                      u257 7FE6  
                    u197 7D68                      wreg 000FE8                     _LATD 000F8C  
                   _scP1 0025                     _scP2 0023                     _scP3 0021  
                   _main 7CF8                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_main 0029                    _TRISD 000F95  
                  tablat 000FF5                    status 000FD8          __initialization 7CAC  
           __end_of_main 8000                   ??_main 0029            __activetblptr 000000  
                 _ADCON1 000FC1                   isa$std 000001             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7CCC            ___rparam_used 000001  
         __pcstackCOMRAM 0029               __pnvCOMRAM 0027                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7CAC                  __ramtop 0800  
                __ptext0 7CF8     end_of_initialization 7CCC                  postdec1 000FE5  
                postinc0 000FEE                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94            __pidataCOMRAM 7CD2      start_initialization 7CAC  
               _LATAbits 000F89                 _LATBbits 000F8A                 _LATCbits 000F8B  
              copy_data0 7CC0                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000            _display_array 0001  
