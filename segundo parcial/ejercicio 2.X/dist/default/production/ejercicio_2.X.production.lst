

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 29 08:38:43 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _ADCON0	set	4034
    52   000000                     _ADRESL	set	4035
    53   000000                     _ADRESH	set	4036
    54                           
    55                           	psect	nvCOMRAM
    56   00000B                     __pnvCOMRAM:
    57                           	callstack 0
    58   00000B                     _val:
    59                           	callstack 0
    60   00000B                     	ds	2
    61   000000                     _ADCON0bits	set	4034
    62   000000                     _GO	set	32273
    63   000000                     _ADON	set	32272
    64   000000                     _LATB	set	3978
    65   000000                     _TRISB	set	3987
    66   000000                     _ADCON2	set	4032
    67   000000                     _ADCON1	set	4033
    68   000000                     _TRISA	set	3986
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73   007F02                     __pcinit:
    74                           	callstack 0
    75   007F02                     start_initialization:
    76                           	callstack 0
    77   007F02                     __initialization:
    78                           	callstack 0
    79   007F02                     end_of_initialization:
    80                           	callstack 0
    81   007F02                     __end_of__initialization:
    82                           	callstack 0
    83   007F02  0100               	movlb	0
    84   007F04  EF8E  F03F         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	cstackCOMRAM
    87   000001                     __pcstackCOMRAM:
    88                           	callstack 0
    89   000001                     ?_ADC_read:
    90                           	callstack 0
    91   000001                     ADC_read@chanel:
    92                           	callstack 0
    93                           
    94                           ; 2 bytes @ 0x0
    95   000001                     	ds	2
    96   000003                     ??_ADC_read:
    97                           
    98                           ; 1 bytes @ 0x2
    99   000003                     	ds	4
   100   000007                     ADC_read@digital:
   101                           	callstack 0
   102                           
   103                           ; 2 bytes @ 0x6
   104   000007                     	ds	2
   105   000009                     ??_main:
   106                           
   107                           ; 1 bytes @ 0x8
   108   000009                     	ds	2
   109                           
   110 ;;
   111 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   112 ;;
   113 ;; *************** function _main *****************
   114 ;; Defined at:
   115 ;;		line 10 in file "main.c"
   116 ;; Parameters:    Size  Location     Type
   117 ;;		None
   118 ;; Auto vars:     Size  Location     Type
   119 ;;		None
   120 ;; Return value:  Size  Location     Type
   121 ;;                  1    wreg      void 
   122 ;; Registers used:
   123 ;;		wreg, status,2, status,0, cstack
   124 ;; Tracked objects:
   125 ;;		On entry : 0/0
   126 ;;		On exit  : 0/0
   127 ;;		Unchanged: 0/0
   128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   129 ;;      Params:         0       0       0       0       0       0       0       0       0
   130 ;;      Locals:         0       0       0       0       0       0       0       0       0
   131 ;;      Temps:          2       0       0       0       0       0       0       0       0
   132 ;;      Totals:         2       0       0       0       0       0       0       0       0
   133 ;;Total ram usage:        2 bytes
   134 ;; Hardware stack levels required when called: 1
   135 ;; This function calls:
   136 ;;		_ADC_init
   137 ;;		_ADC_read
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           	psect	text0
   144   007F1C                     __ptext0:
   145                           	callstack 0
   146   007F1C                     _main:
   147                           	callstack 30
   148   007F1C                     
   149                           ;main.c: 11:     TRISB = 0;
   150   007F1C  0E00               	movlw	0
   151   007F1E  6E93               	movwf	147,c	;volatile
   152   007F20                     
   153                           ;main.c: 13:     ADC_init();
   154   007F20  EC84  F03F         	call	_ADC_init	;wreg free
   155   007F24                     l767:
   156                           
   157                           ;main.c: 15:         val = ADC_read(0);
   158   007F24  0E00               	movlw	0
   159   007F26  6E02               	movwf	(ADC_read@chanel+1)^0,c
   160   007F28  0E00               	movlw	0
   161   007F2A  6E01               	movwf	ADC_read@chanel^0,c
   162   007F2C  ECB2  F03F         	call	_ADC_read	;wreg free
   163   007F30  C001  F00B         	movff	?_ADC_read,_val
   164   007F34  C002  F00C         	movff	?_ADC_read+1,_val+1
   165   007F38                     
   166                           ;main.c: 16:         LATB = val;
   167   007F38  C00B  FF8A         	movff	_val,3978	;volatile
   168   007F3C                     
   169                           ;main.c: 18:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   170   007F3C  0E1A               	movlw	26
   171   007F3E  6E0A               	movwf	(??_main+1)^0,c
   172   007F40  0E5E               	movlw	94
   173   007F42  6E09               	movwf	??_main^0,c
   174   007F44  0E6E               	movlw	110
   175   007F46                     u157:
   176   007F46  2EE8               	decfsz	wreg,f,c
   177   007F48  D7FE               	bra	u157
   178   007F4A  2E09               	decfsz	??_main^0,f,c
   179   007F4C  D7FC               	bra	u157
   180   007F4E  2E0A               	decfsz	(??_main+1)^0,f,c
   181   007F50  D7FA               	bra	u157
   182   007F52  D000               	nop2	
   183   007F54                     
   184                           ;main.c: 19:         val = 0;
   185   007F54  0E00               	movlw	0
   186   007F56  6E0C               	movwf	(_val+1)^0,c
   187   007F58  0E00               	movlw	0
   188   007F5A  6E0B               	movwf	_val^0,c
   189   007F5C  EF92  F03F         	goto	l767
   190   007F60  EF00  F000         	goto	start
   191   007F64                     __end_of_main:
   192                           	callstack 0
   193                           
   194 ;; *************** function _ADC_read *****************
   195 ;; Defined at:
   196 ;;		line 32 in file "main.c"
   197 ;; Parameters:    Size  Location     Type
   198 ;;  chanel          2    0[COMRAM] int 
   199 ;; Auto vars:     Size  Location     Type
   200 ;;  digital         2    6[COMRAM] int 
   201 ;; Return value:  Size  Location     Type
   202 ;;                  2    0[COMRAM] int 
   203 ;; Registers used:
   204 ;;		wreg, status,2, status,0
   205 ;; Tracked objects:
   206 ;;		On entry : 0/0
   207 ;;		On exit  : 0/0
   208 ;;		Unchanged: 0/0
   209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   210 ;;      Params:         2       0       0       0       0       0       0       0       0
   211 ;;      Locals:         2       0       0       0       0       0       0       0       0
   212 ;;      Temps:          4       0       0       0       0       0       0       0       0
   213 ;;      Totals:         8       0       0       0       0       0       0       0       0
   214 ;;Total ram usage:        8 bytes
   215 ;; Hardware stack levels used: 1
   216 ;; This function calls:
   217 ;;		Nothing
   218 ;; This function is called by:
   219 ;;		_main
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           	psect	text1
   224   007F64                     __ptext1:
   225                           	callstack 0
   226   007F64                     _ADC_read:
   227                           	callstack 30
   228   007F64                     
   229                           ;main.c: 36:     ADCON0 = (ADCON0 & 0b11000011)|((chanel << 2) & 0b00111100);
   230   007F64  C001  F003         	movff	ADC_read@chanel,??_ADC_read
   231   007F68  90D8               	bcf	status,0,c
   232   007F6A  3603               	rlcf	??_ADC_read^0,f,c
   233   007F6C  90D8               	bcf	status,0,c
   234   007F6E  3603               	rlcf	??_ADC_read^0,f,c
   235   007F70  0E3C               	movlw	60
   236   007F72  1603               	andwf	??_ADC_read^0,f,c
   237   007F74  50C2               	movf	194,w,c	;volatile
   238   007F76  0BC3               	andlw	195
   239   007F78  1003               	iorwf	??_ADC_read^0,w,c
   240   007F7A  6EC2               	movwf	194,c	;volatile
   241   007F7C                     
   242                           ;main.c: 39:     ADCON0 |=((1<<ADON)| (1 << GO));
   243   007F7C  B2C2               	btfsc	4034,1,c	;volatile
   244   007F7E  EFC3  F03F         	goto	u81
   245   007F82  EFC7  F03F         	goto	u80
   246   007F86                     u81:
   247   007F86  6A03               	clrf	??_ADC_read^0,c
   248   007F88  2A03               	incf	??_ADC_read^0,f,c
   249   007F8A  EFC8  F03F         	goto	u98
   250   007F8E                     u80:
   251   007F8E  6A03               	clrf	??_ADC_read^0,c
   252   007F90                     u98:
   253   007F90  0E01               	movlw	1
   254   007F92  6E04               	movwf	(??_ADC_read+1)^0,c
   255   007F94  2A03               	incf	??_ADC_read^0,f,c
   256   007F96  EFCF  F03F         	goto	u104
   257   007F9A                     u105:
   258   007F9A  90D8               	bcf	status,0,c
   259   007F9C  3604               	rlcf	(??_ADC_read+1)^0,f,c
   260   007F9E                     u104:
   261   007F9E  2E03               	decfsz	??_ADC_read^0,f,c
   262   007FA0  EFCD  F03F         	goto	u105
   263   007FA4  B0C2               	btfsc	4034,0,c	;volatile
   264   007FA6  EFD7  F03F         	goto	u111
   265   007FAA  EFDB  F03F         	goto	u110
   266   007FAE                     u111:
   267   007FAE  6A05               	clrf	(??_ADC_read+2)^0,c
   268   007FB0  2A05               	incf	(??_ADC_read+2)^0,f,c
   269   007FB2  EFDC  F03F         	goto	u128
   270   007FB6                     u110:
   271   007FB6  6A05               	clrf	(??_ADC_read+2)^0,c
   272   007FB8                     u128:
   273   007FB8  0E01               	movlw	1
   274   007FBA  6E06               	movwf	(??_ADC_read+3)^0,c
   275   007FBC  2A05               	incf	(??_ADC_read+2)^0,f,c
   276   007FBE  EFE3  F03F         	goto	u134
   277   007FC2                     u135:
   278   007FC2  90D8               	bcf	status,0,c
   279   007FC4  3606               	rlcf	(??_ADC_read+3)^0,f,c
   280   007FC6                     u134:
   281   007FC6  2E05               	decfsz	(??_ADC_read+2)^0,f,c
   282   007FC8  EFE1  F03F         	goto	u135
   283   007FCC  5006               	movf	(??_ADC_read+3)^0,w,c
   284   007FCE  1004               	iorwf	(??_ADC_read+1)^0,w,c
   285   007FD0  12C2               	iorwf	194,f,c	;volatile
   286   007FD2                     l44:
   287   007FD2  B2C2               	btfsc	194,1,c	;volatile
   288   007FD4  EFEE  F03F         	goto	u141
   289   007FD8  EFF0  F03F         	goto	u140
   290   007FDC                     u141:
   291   007FDC  EFE9  F03F         	goto	l44
   292   007FE0                     u140:
   293   007FE0                     
   294                           ;main.c: 45:     digital = (ADRESH*256)|(ADRESL);
   295   007FE0  50C3               	movf	195,w,c	;volatile
   296   007FE2  CFC4 F003          	movff	4036,??_ADC_read	;volatile
   297   007FE6  6A04               	clrf	(??_ADC_read+1)^0,c
   298   007FE8  C003  F004         	movff	??_ADC_read,??_ADC_read+1
   299   007FEC  6A03               	clrf	??_ADC_read^0,c
   300   007FEE  1003               	iorwf	??_ADC_read^0,w,c
   301   007FF0  6E07               	movwf	ADC_read@digital^0,c
   302   007FF2  5004               	movf	(??_ADC_read+1)^0,w,c
   303   007FF4  6E08               	movwf	(ADC_read@digital+1)^0,c
   304   007FF6                     
   305                           ;main.c: 47:     return digital;
   306   007FF6  C007  F001         	movff	ADC_read@digital,?_ADC_read
   307   007FFA  C008  F002         	movff	ADC_read@digital+1,?_ADC_read+1
   308   007FFE  0012               	return		;funcret
   309   008000                     __end_of_ADC_read:
   310                           	callstack 0
   311                           
   312 ;; *************** function _ADC_init *****************
   313 ;; Defined at:
   314 ;;		line 24 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   328 ;;      Params:         0       0       0       0       0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0       0       0       0       0
   330 ;;      Temps:          0       0       0       0       0       0       0       0       0
   331 ;;      Totals:         0       0       0       0       0       0       0       0       0
   332 ;;Total ram usage:        0 bytes
   333 ;; Hardware stack levels used: 1
   334 ;; This function calls:
   335 ;;		Nothing
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text2
   342   007F08                     __ptext2:
   343                           	callstack 0
   344   007F08                     _ADC_init:
   345                           	callstack 30
   346   007F08                     
   347                           ;main.c: 25:     TRISA = 0xFF;
   348   007F08  6892               	setf	146,c	;volatile
   349   007F0A                     
   350                           ;main.c: 26:     ADCON1 = 0x0D;
   351   007F0A  0E0D               	movlw	13
   352   007F0C  6EC1               	movwf	193,c	;volatile
   353                           
   354                           ;main.c: 27:     ADCON2 = 0xB5;
   355   007F0E  0EB5               	movlw	181
   356   007F10  6EC0               	movwf	192,c	;volatile
   357                           
   358                           ;main.c: 28:     ADRESH = 0;
   359   007F12  0E00               	movlw	0
   360   007F14  6EC4               	movwf	196,c	;volatile
   361                           
   362                           ;main.c: 29:     ADRESL = 0;
   363   007F16  0E00               	movlw	0
   364   007F18  6EC3               	movwf	195,c	;volatile
   365   007F1A  0012               	return		;funcret
   366   007F1C                     __end_of_ADC_init:
   367                           	callstack 0
   368   000000                     
   369                           	psect	rparam
   370   000000                     
   371                           	psect	idloc
   372                           
   373                           ;Config register IDLOC0 @ 0x200000
   374                           ;	unspecified, using default values
   375   200000                     	org	2097152
   376   200000  FF                 	db	255
   377                           
   378                           ;Config register IDLOC1 @ 0x200001
   379                           ;	unspecified, using default values
   380   200001                     	org	2097153
   381   200001  FF                 	db	255
   382                           
   383                           ;Config register IDLOC2 @ 0x200002
   384                           ;	unspecified, using default values
   385   200002                     	org	2097154
   386   200002  FF                 	db	255
   387                           
   388                           ;Config register IDLOC3 @ 0x200003
   389                           ;	unspecified, using default values
   390   200003                     	org	2097155
   391   200003  FF                 	db	255
   392                           
   393                           ;Config register IDLOC4 @ 0x200004
   394                           ;	unspecified, using default values
   395   200004                     	org	2097156
   396   200004  FF                 	db	255
   397                           
   398                           ;Config register IDLOC5 @ 0x200005
   399                           ;	unspecified, using default values
   400   200005                     	org	2097157
   401   200005  FF                 	db	255
   402                           
   403                           ;Config register IDLOC6 @ 0x200006
   404                           ;	unspecified, using default values
   405   200006                     	org	2097158
   406   200006  FF                 	db	255
   407                           
   408                           ;Config register IDLOC7 @ 0x200007
   409                           ;	unspecified, using default values
   410   200007                     	org	2097159
   411   200007  FF                 	db	255
   412                           
   413                           	psect	config
   414                           
   415                           ;Config register CONFIG1L @ 0x300000
   416                           ;	PLL Prescaler Selection bits
   417                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   418                           ;	System Clock Postscaler Selection bits
   419                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   420                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   421                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   422   300000                     	org	3145728
   423   300000  00                 	db	0
   424                           
   425                           ;Config register CONFIG1H @ 0x300001
   426                           ;	Oscillator Selection bits
   427                           ;	FOSC = HS, HS oscillator (HS)
   428                           ;	Fail-Safe Clock Monitor Enable bit
   429                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   430                           ;	Internal/External Oscillator Switchover bit
   431                           ;	IESO = OFF, Oscillator Switchover mode disabled
   432   300001                     	org	3145729
   433   300001  0C                 	db	12
   434                           
   435                           ;Config register CONFIG2L @ 0x300002
   436                           ;	Power-up Timer Enable bit
   437                           ;	PWRT = OFF, PWRT disabled
   438                           ;	Brown-out Reset Enable bits
   439                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   440                           ;	Brown-out Reset Voltage bits
   441                           ;	BORV = 3, Minimum setting 2.05V
   442                           ;	USB Voltage Regulator Enable bit
   443                           ;	VREGEN = OFF, USB voltage regulator disabled
   444   300002                     	org	3145730
   445   300002  1F                 	db	31
   446                           
   447                           ;Config register CONFIG2H @ 0x300003
   448                           ;	Watchdog Timer Enable bit
   449                           ;	WDT = ON, WDT enabled
   450                           ;	Watchdog Timer Postscale Select bits
   451                           ;	WDTPS = 32768, 1:32768
   452   300003                     	org	3145731
   453   300003  1F                 	db	31
   454                           
   455                           ; Padding undefined space
   456   300004                     	org	3145732
   457   300004  FF                 	db	255
   458                           
   459                           ;Config register CONFIG3H @ 0x300005
   460                           ;	CCP2 MUX bit
   461                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   462                           ;	PORTB A/D Enable bit
   463                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   464                           ;	Low-Power Timer 1 Oscillator Enable bit
   465                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   466                           ;	MCLR Pin Enable bit
   467                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   468   300005                     	org	3145733
   469   300005  83                 	db	131
   470                           
   471                           ;Config register CONFIG4L @ 0x300006
   472                           ;	Stack Full/Underflow Reset Enable bit
   473                           ;	STVREN = ON, Stack full/underflow will cause Reset
   474                           ;	Single-Supply ICSP Enable bit
   475                           ;	LVP = ON, Single-Supply ICSP enabled
   476                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   477                           ;	ICPRT = OFF, ICPORT disabled
   478                           ;	Extended Instruction Set Enable bit
   479                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   480                           ;	Background Debugger Enable bit
   481                           ;	DEBUG = 0x1, unprogrammed default
   482   300006                     	org	3145734
   483   300006  85                 	db	133
   484                           
   485                           ; Padding undefined space
   486   300007                     	org	3145735
   487   300007  FF                 	db	255
   488                           
   489                           ;Config register CONFIG5L @ 0x300008
   490                           ;	Code Protection bit
   491                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   492                           ;	Code Protection bit
   493                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   494                           ;	Code Protection bit
   495                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   496                           ;	Code Protection bit
   497                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   498   300008                     	org	3145736
   499   300008  0F                 	db	15
   500                           
   501                           ;Config register CONFIG5H @ 0x300009
   502                           ;	Boot Block Code Protection bit
   503                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   504                           ;	Data EEPROM Code Protection bit
   505                           ;	CPD = OFF, Data EEPROM is not code-protected
   506   300009                     	org	3145737
   507   300009  C0                 	db	192
   508                           
   509                           ;Config register CONFIG6L @ 0x30000A
   510                           ;	Write Protection bit
   511                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   512                           ;	Write Protection bit
   513                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   514                           ;	Write Protection bit
   515                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   516                           ;	Write Protection bit
   517                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   518   30000A                     	org	3145738
   519   30000A  0F                 	db	15
   520                           
   521                           ;Config register CONFIG6H @ 0x30000B
   522                           ;	Configuration Register Write Protection bit
   523                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   524                           ;	Boot Block Write Protection bit
   525                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   526                           ;	Data EEPROM Write Protection bit
   527                           ;	WRTD = OFF, Data EEPROM is not write-protected
   528   30000B                     	org	3145739
   529   30000B  E0                 	db	224
   530                           
   531                           ;Config register CONFIG7L @ 0x30000C
   532                           ;	Table Read Protection bit
   533                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   534                           ;	Table Read Protection bit
   535                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   536                           ;	Table Read Protection bit
   537                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   538                           ;	Table Read Protection bit
   539                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   540   30000C                     	org	3145740
   541   30000C  0F                 	db	15
   542                           
   543                           ;Config register CONFIG7H @ 0x30000D
   544                           ;	Boot Block Table Read Protection bit
   545                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   546   30000D                     	org	3145741
   547   30000D  40                 	db	64
   548                           tosu	equ	0xFFF
   549                           tosh	equ	0xFFE
   550                           tosl	equ	0xFFD
   551                           stkptr	equ	0xFFC
   552                           pclatu	equ	0xFFB
   553                           pclath	equ	0xFFA
   554                           pcl	equ	0xFF9
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           prodh	equ	0xFF4
   560                           prodl	equ	0xFF3
   561                           indf0	equ	0xFEF
   562                           postinc0	equ	0xFEE
   563                           postdec0	equ	0xFED
   564                           preinc0	equ	0xFEC
   565                           plusw0	equ	0xFEB
   566                           fsr0h	equ	0xFEA
   567                           fsr0l	equ	0xFE9
   568                           wreg	equ	0xFE8
   569                           indf1	equ	0xFE7
   570                           postinc1	equ	0xFE6
   571                           postdec1	equ	0xFE5
   572                           preinc1	equ	0xFE4
   573                           plusw1	equ	0xFE3
   574                           fsr1h	equ	0xFE2
   575                           fsr1l	equ	0xFE1
   576                           bsr	equ	0xFE0
   577                           indf2	equ	0xFDF
   578                           postinc2	equ	0xFDE
   579                           postdec2	equ	0xFDD
   580                           preinc2	equ	0xFDC
   581                           plusw2	equ	0xFDB
   582                           fsr2h	equ	0xFDA
   583                           fsr2l	equ	0xFD9
   584                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     122
                                              8 COMRAM     2     2      0
                           _ADC_init
                           _ADC_read
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             8     6      2     122
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       C       1       12.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       C       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhh        3B      0       0      20        0.0%
BITBIGSFRhl         2C      0       0      21        0.0%
BITBIGSFRlh          7      0       0      22        0.0%
BITBIGSFRll         2A      0       0      23        0.0%
ABS                  0      0       C      24        0.0%
BIGRAM             7FF      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 29 08:38:43 2024

                     l41 7F1A                       l44 7FD2                       l47 7FFE  
                     _GO 007E11                       u80 7F8E                       u81 7F86  
                     u98 7F90                      l723 7F08                      l725 7F0A  
                    l751 7F64                      l753 7F64                      l755 7F7C  
                    l771 7F3C                      l763 7F1C                      l757 7FE0  
                    l773 7F54                      l765 7F20                      l759 7FF6  
                    l767 7F24                      l769 7F38                      u110 7FB6  
                    u111 7FAE                      u104 7F9E                      u105 7F9A  
                    u140 7FE0                      u141 7FDC                      u134 7FC6  
                    u135 7FC2                      u128 7FB8                      u157 7F46  
                    _val 000B                      wreg 000FE8                     _ADON 007E10  
                   _LATB 000F8A                     _main 7F1C                     start 0000  
       __end_of_ADC_init 7F1C         __end_of_ADC_read 8000             ___param_bank 000000  
                  ?_main 0001                    _TRISA 000F92                    _TRISB 000F93  
                  status 000FD8          __initialization 7F02             __end_of_main 7F64  
         ADC_read@chanel 0001                   ??_main 0009            __activetblptr 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   isa$std 000001  
              ?_ADC_init 0001                ?_ADC_read 0001               __accesstop 0060  
__end_of__initialization 7F02            ___rparam_used 000001           __pcstackCOMRAM 0001  
        ADC_read@digital 0007               ??_ADC_init 0001               ??_ADC_read 0003  
             __pnvCOMRAM 000B                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F02                  __ramtop 0800                  __ptext0 7F1C  
                __ptext1 7F64                  __ptext2 7F08     end_of_initialization 7F02  
    start_initialization 7F02                 _ADC_init 7F08                 _ADC_read 7F64  
             _ADCON0bits 000FC2                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000  
